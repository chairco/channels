# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Andrew Godwin
# This file is distributed under the same license as the Channels package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Channels 1.0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-02-22 11:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Chinese (Taiwan) (https://www.transifex.com/django-channels-tw-docs/teams/72101/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../releases/1.0.0.rst:2
msgid "1.0.0 Release Notes"
msgstr ""

#: ../../releases/1.0.0.rst:4
msgid ""
"Channels 1.0.0 brings together a number of design changes, including some "
"breaking changes, into our first fully stable release, and also brings the "
"databinding code out of alpha phase. It was released on 2017/01/08."
msgstr ""

#: ../../releases/1.0.0.rst:8
msgid ""
"The result is a faster, easier to use, and safer Channels, including one "
"major change that will fix almost all problems with sessions and "
"connect/receive ordering in a way that needs no persistent storage."
msgstr ""

#: ../../releases/1.0.0.rst:12
msgid ""
"It was unfortunately not possible to make all of the changes backwards "
"compatible, though most code should not be too affected and the fixes are "
"generally quite easy."
msgstr ""

#: ../../releases/1.0.0.rst:16
msgid ""
"You **must also update Daphne** to at least 1.0.0 to have this release of "
"Channels work correctly."
msgstr ""

#: ../../releases/1.0.0.rst:21
msgid "Major Features"
msgstr ""

#: ../../releases/1.0.0.rst:23
msgid "Channels 1.0 introduces a couple of new major features."
msgstr ""

#: ../../releases/1.0.0.rst:27
msgid "WebSocket accept/reject flow"
msgstr ""

#: ../../releases/1.0.0.rst:29
msgid ""
"Rather than be immediately accepted, WebSockets now pause during the "
"handshake while they send over a message on ``websocket.connect``, and your "
"application must either accept or reject the connection before the handshake"
" is completed and messages can be received."
msgstr ""

#: ../../releases/1.0.0.rst:34 ../../releases/1.0.0.rst:168
msgid ""
"You **must** update Daphne to at least 1.0.0 to make this work correctly."
msgstr ""

#: ../../releases/1.0.0.rst:36
msgid "This has several advantages:"
msgstr ""

#: ../../releases/1.0.0.rst:38
msgid ""
"You can now reject WebSockets before they even finish connecting, giving "
"appropriate error codes to browsers and not letting the browser-side socket "
"ever get into a connected state and send messages."
msgstr ""

#: ../../releases/1.0.0.rst:42
msgid ""
"Combined with Consumer Atomicity (below), it means there is no longer any "
"need for the old \"slight ordering\" mode, as the connect consumer must run "
"to completion and accept the socket before any messages can be received and "
"forwarded onto ``websocket.receive``."
msgstr ""

#: ../../releases/1.0.0.rst:47
msgid ""
"Any ``send`` message sent to the WebSocket will implicitly accept the "
"connection, meaning only a limited set of ``connect`` consumers need changes"
" (see Backwards Incompatible Changes below)"
msgstr ""

#: ../../releases/1.0.0.rst:53
msgid "Consumer Atomicity"
msgstr ""

#: ../../releases/1.0.0.rst:55
msgid ""
"Consumers will now buffer messages you try to send until the consumer "
"completes and then send them once it exits and the outbound part of any "
"decorators have been run (even if an exception is raised)."
msgstr ""

#: ../../releases/1.0.0.rst:59
msgid ""
"This makes the flow of messages much easier to reason about - consumers can "
"now be reasoned about as atomic blocks that run and then send messages, "
"meaning that if you send a message to start another consumer you're "
"guaranteed that the sending consumer has finished running by the time it's "
"acted upon."
msgstr ""

#: ../../releases/1.0.0.rst:64
msgid ""
"If you want to send messages immediately rather than at the end of the "
"consumer, you can still do that by passing the ``immediately`` argument::"
msgstr ""

#: ../../releases/1.0.0.rst:69
msgid ""
"This should be mostly backwards compatible, and may actually fix race "
"conditions in some apps that were pre-existing."
msgstr ""

#: ../../releases/1.0.0.rst:74
msgid "Databinding Group/Action Overhaul"
msgstr ""

#: ../../releases/1.0.0.rst:76
msgid ""
"Previously, databinding subclasses had to implement ``group_names(instance, "
"action)`` to return what groups to send an instance's change to of the type "
"``action``. This had flaws, most notably when what was actually just a "
"modification to the instance in question changed its permission status so "
"more clients could see it; to those clients, it should instead have been "
"\"created\"."
msgstr ""

#: ../../releases/1.0.0.rst:83
msgid ""
"Now, Channels just calls ``group_names(instance)``, and you should return "
"what groups can see the instance at the current point in time given the "
"instance you were passed. Channels will actually call the method before and "
"after changes, comparing the groups you gave, and sending out create, update"
" or delete messages to clients appropriately."
msgstr ""

#: ../../releases/1.0.0.rst:89
msgid ""
"Existing databinding code will need to be adapted; see the \"Backwards "
"Incompatible Changes\" section for more."
msgstr ""

#: ../../releases/1.0.0.rst:94
msgid "Demultiplexer Overhaul"
msgstr ""

#: ../../releases/1.0.0.rst:96
msgid ""
"Demuliplexers have changed to remove the behaviour where they re-sent "
"messages onto new channels without special headers, and instead now "
"correctly split out incoming messages into sub-messages that still look like"
" ``websocket.receive`` messages, and directly dispatch these to the relevant"
" consumer."
msgstr ""

#: ../../releases/1.0.0.rst:101
msgid ""
"They also now forward all ``websocket.connect`` and ``websocket.disconnect``"
" messages to all of their sub-consumers, so it's much easier to compose "
"things together from code that also works outside the context of "
"multiplexing."
msgstr ""

#: ../../releases/1.0.0.rst:105
msgid "For more, read the updated :doc:`/generic` docs."
msgstr ""

#: ../../releases/1.0.0.rst:109
msgid "Delay Server"
msgstr ""

#: ../../releases/1.0.0.rst:111
msgid ""
"A built-in delay server, launched with `manage.py rundelay`, now ships if "
"you wish to use it. It needs some extra initial setup and uses a database "
"for persistance; see :doc:`/delay` for more information."
msgstr ""

#: ../../releases/1.0.0.rst:117
msgid "Minor Changes"
msgstr ""

#: ../../releases/1.0.0.rst:119
msgid ""
"Serializers can now specify fields as ``__all__`` to auto-include all "
"fields, and ``exclude`` to remove certain unwanted fields."
msgstr ""

#: ../../releases/1.0.0.rst:122
msgid "``runserver`` respects ``FORCE_SCRIPT_NAME``"
msgstr ""

#: ../../releases/1.0.0.rst:124
msgid ""
"Websockets can now be closed with a specific code by calling "
"``close(status=4000)``"
msgstr ""

#: ../../releases/1.0.0.rst:126
msgid ""
"``enforce_ordering`` no longer has a ``slight`` mode (because of the accept "
"flow changes), and is more efficient with session saving."
msgstr ""

#: ../../releases/1.0.0.rst:129
msgid ""
"``runserver`` respects ``--nothreading`` and only launches one worker, takes"
" a ``--http-timeout`` option if you want to override it from the default "
"``60``,"
msgstr ""

#: ../../releases/1.0.0.rst:132
msgid ""
"A new ``@channel_and_http_session`` decorator rehydrates the HTTP session "
"out of the channel session if you want to access it inside receive "
"consumers."
msgstr ""

#: ../../releases/1.0.0.rst:135
msgid "Streaming responses no longer have a chance of being cached."
msgstr ""

#: ../../releases/1.0.0.rst:137
msgid "``request.META['SERVER_PORT']`` is now always a string."
msgstr ""

#: ../../releases/1.0.0.rst:139
msgid "``http.disconnect`` now has a ``path`` key so you can route it."
msgstr ""

#: ../../releases/1.0.0.rst:141
msgid "Test client now has a ``send_and_consume`` method."
msgstr ""

#: ../../releases/1.0.0.rst:145 ../../releases/1.0.1.rst:14
#: ../../releases/1.0.2.rst:25 ../../releases/1.0.3.rst:24
msgid "Backwards Incompatible Changes"
msgstr ""

#: ../../releases/1.0.0.rst:148
msgid "Connect Consumers"
msgstr ""

#: ../../releases/1.0.0.rst:150
msgid ""
"If you have a custom consumer for ``websocket.connect``, you must ensure "
"that it either:"
msgstr ""

#: ../../releases/1.0.0.rst:153
msgid ""
"Sends at least one message onto the ``reply_channel`` that generates a "
"WebSocket frame (either ``bytes`` or ``text`` is set), either directly or "
"via a group."
msgstr ""

#: ../../releases/1.0.0.rst:156
msgid ""
"Sends a message onto the ``reply_channel`` that is ``{\"accept\": True}``, "
"to accept a connection without sending data."
msgstr ""

#: ../../releases/1.0.0.rst:158
msgid ""
"Sends a message onto the ``reply_channel`` that is ``{\"close\": True}``, to"
" reject a connection mid-handshake."
msgstr ""

#: ../../releases/1.0.0.rst:161
msgid ""
"Many consumers already do the former, but if your connect consumer does not "
"send anything you MUST now send an accept message or the socket will remain "
"in the handshaking phase forever and you'll never get any messages."
msgstr ""

#: ../../releases/1.0.0.rst:165
msgid ""
"All built-in Channels consumers (e.g. in the generic consumers) have been "
"upgraded to do this."
msgstr ""

#: ../../releases/1.0.0.rst:172
msgid "Databinding group_names"
msgstr ""

#: ../../releases/1.0.0.rst:174
msgid ""
"If you have databinding subclasses, you will have implemented "
"``group_names(instance, action)``, which returns the groups to use based on "
"the instance and action provided."
msgstr ""

#: ../../releases/1.0.0.rst:178
msgid ""
"Now, instead, you must implement ``group_names(instance)``, which returns "
"the groups that can see the instance as it is presented for you; the action "
"results will be worked out for you. For example, if you want to only show "
"objects marked as \"admin_only\" to admins, and objects without it to "
"everyone, previously you would have done::"
msgstr ""

#: ../../releases/1.0.0.rst:190
msgid ""
"Because you did nothing based on the ``action`` (and if you did, you would "
"have got incomplete messages, hence this design change), you can just change"
" the signature of the method like this::"
msgstr ""

#: ../../releases/1.0.0.rst:200
msgid ""
"Now, when an object is updated to have ``admin_only = True``, the clients in"
" the ``non-admins`` group will get a ``delete`` message, while those in the "
"``admins`` group will get an ``update`` message."
msgstr ""

#: ../../releases/1.0.0.rst:206
msgid "Demultiplexers"
msgstr ""

#: ../../releases/1.0.0.rst:208
msgid ""
"Demultiplexers have changed from using a ``mapping`` dict, which mapped "
"stream names to channels, to using a ``consumers`` dict which maps stream "
"names directly to consumer classes."
msgstr ""

#: ../../releases/1.0.0.rst:212
msgid ""
"You will have to convert over to using direct references to consumers, "
"change the name of the dict, and then you can remove any channel routing for"
" the old channels that were in ``mapping`` from your routes."
msgstr ""

#: ../../releases/1.0.0.rst:216
msgid ""
"Additionally, the Demultiplexer now forwards messages as they would look "
"from a direct connection, meaning that where you previously got a decoded "
"object through you will now get a correctly-formatted ``websocket.receive`` "
"message through with the content as a ``text`` key, JSON-encoded. You will "
"also now have to handle ``websocket.connect`` and ``websocket.disconnect`` "
"messages."
msgstr ""

#: ../../releases/1.0.0.rst:222
msgid ""
"Both of these issues can be solved using the ``JsonWebsocketConsumer`` "
"generic consumer, which will decode for you and correctly separate "
"connection and disconnection handling into their own methods."
msgstr ""

#: ../../releases/1.0.1.rst:2
msgid "1.0.1 Release Notes"
msgstr ""

#: ../../releases/1.0.1.rst:4
msgid "Channels 1.0.1 is a minor bugfix release, released on 2017/01/09."
msgstr ""

#: ../../releases/1.0.1.rst:7 ../../releases/1.0.2.rst:7
#: ../../releases/1.0.3.rst:7
msgid "Changes"
msgstr ""

#: ../../releases/1.0.1.rst:9
msgid ""
"WebSocket generic views now accept connections by default in their connect "
"handler for better backwards compatibility."
msgstr ""

#: ../../releases/1.0.1.rst:16 ../../releases/1.0.2.rst:27
#: ../../releases/1.0.3.rst:26
msgid "None."
msgstr ""

#: ../../releases/1.0.2.rst:2
msgid "1.0.2 Release Notes"
msgstr ""

#: ../../releases/1.0.2.rst:4
msgid "Channels 1.0.2 is a minor bugfix release, released on 2017/01/12."
msgstr ""

#: ../../releases/1.0.2.rst:9
msgid ""
"Websockets can now be closed from anywhere using the new "
"``WebsocketCloseException``, available as "
"``channels.exceptions.WebsocketCloseException(code=None)``. There is also a "
"generic ``ChannelSocketException`` you can base any exceptions on that, if "
"it is caught, gets handed the current ``message`` in a ``run`` method, so "
"you can do custom behaviours."
msgstr ""

#: ../../releases/1.0.2.rst:15
msgid ""
"Calling ``Channel.send`` or ``Group.send`` from outside a consumer context "
"(i.e. in tests or management commands) will once again send the message "
"immediately, rather than putting it into the consumer message buffer to be "
"flushed when the consumer ends (which never happens)"
msgstr ""

#: ../../releases/1.0.2.rst:20
msgid ""
"The base implementation of databinding now correctly only calls "
"``group_names(instance)``, as documented."
msgstr ""

#: ../../releases/1.0.3.rst:2
msgid "1.0.3 Release Notes"
msgstr ""

#: ../../releases/1.0.3.rst:4
msgid "Channels 1.0.3 is a minor bugfix release, released on 2017/02/01."
msgstr ""

#: ../../releases/1.0.3.rst:9
msgid ""
"Database connections are no longer force-closed after each test is run."
msgstr ""

#: ../../releases/1.0.3.rst:11
msgid ""
"Channel sessions are not re-saved if they're empty even if they're marked as"
" modified, allowing logout to work correctly."
msgstr ""

#: ../../releases/1.0.3.rst:14
msgid ""
"WebsocketDemultiplexer now correctly does sessions for the second/third/etc."
" connect and disconnect handlers."
msgstr ""

#: ../../releases/1.0.3.rst:17
msgid ""
"Request reading timeouts now correctly return 408 rather than erroring out."
msgstr ""

#: ../../releases/1.0.3.rst:19
msgid ""
"The ``rundelay`` delay server now only polls the database once per second, "
"and this interval is configurable with the ``--sleep`` option."
msgstr ""

#: ../../releases/index.rst:2
msgid "Release Notes"
msgstr ""
